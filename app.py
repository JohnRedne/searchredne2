# -*- coding: utf-8 -*-
"""Untitled37.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12ltdYIH4U3gXuystpkRQUnaCYaHBlvnw
"""

from flask import Flask, request, jsonify, send_file
import requests
import io
from obspy import read
import matplotlib.pyplot as plt

app = Flask(__name__)

@app.route('/generate_sismograma', methods=['GET'])
def generate_sismograma():
    try:
        # Obtener parámetros de la solicitud
        start = request.args.get('start')
        end = request.args.get('end')
        net = request.args.get('net')
        sta = request.args.get('sta')
        loc = request.args.get('loc')
        cha = request.args.get('cha')

        # Validar parámetros
        if not all([start, end, net, sta, loc, cha]):
            return jsonify({"error": "Faltan parámetros requeridos"}), 400

        # Construir el enlace hacia el servidor de datos
        url = f"http://osso.univalle.edu.co/fdsnws/dataselect/1/query?starttime={start}&endtime={end}&network={net}&station={sta}&location={loc}&channel={cha}&nodata=404"

        # Realizar la solicitud al servidor remoto
        response = requests.get(url)
        if response.status_code != 200:
            return jsonify({"error": f"Error al descargar datos: {response.status_code}"}), 500

        # Procesar los datos MiniSEED
        mini_seed_data = io.BytesIO(response.content)
        st = read(mini_seed_data)

        # Crear gráfico del sismograma
        tr = st[0]
        fig, ax = plt.subplots(figsize=(10, 6))
        ax.plot(tr.times("matplotlib"), tr.data, color='blue')
        ax.set_title(f"Sismograma {sta} {cha}")
        ax.set_xlabel("Tiempo (HH:MM:SS)")
        ax.set_ylabel("Amplitud")
        plt.grid()

        # Guardar el gráfico en memoria
        output = io.BytesIO()
        plt.savefig(output, format='png')
        output.seek(0)
        plt.close(fig)

        return send_file(output, mimetype='image/png')

    except Exception as e:
        return jsonify({"error": f"Ocurrió un error: {str(e)}"}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
